<h1 class="flex items-center justify-center">
  <p class="font-script font-medium italic text-5xl">Welcome to LChat!</p>
</h1>
<div class="flex mt-[40px] h-[75vh] mx-auto max-w-5xl">
<div class="mr-20 py-5 px-5 bg-white shadow-lg rounded-lg overflow-y-auto">
  <h2 class="text-lg font-semibold text-gray-800 mb-4">Users Online</h2>
  <ul class="flex flex-col gap-4">
    <li
      :for={{_user_id, meta} <-@presences |> Enum.sort(fn {_id1, meta1}, {_id2, meta2} -> meta1.is_typing > meta2.is_typing end)}
      class="flex items-center gap-4 p-4 py-[200px] border-2 border-gray-300 rounded-lg shadow-md transition duration-300 hover:shadow-xl hover:border-gray-400"
    >
      <!-- Avatar -->
      <div
        class="flex items-center justify-center w-12 h-12 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 text-white text-lg font-bold shadow-md"
      >
        {String.first(meta.username)}
      </div>

      <!-- User Info -->
      <div>
        <span class="font-medium text-gray-900">{meta.username}</span>
        
        <!-- Typing Animation -->
        <div :if={meta.is_typing} class="flex space-x-1 mt-1">
          <span class="w-2.5 h-2.5 bg-blue-500 rounded-full animate-typing shadow-md"></span>
          <span class="w-2.5 h-2.5 bg-blue-500 rounded-full animate-typing shadow-md [animation-delay:0.2s]"></span>
          <span class="w-2.5 h-2.5 bg-blue-500 rounded-full animate-typing shadow-md [animation-delay:0.4s]"></span>
        </div>
      </div>
    </li>
  </ul>
</div>

  <section class="mt-[30px] flex flex-col w-[75%] justify-between shadow-lg rounded-lg">
    <div
      id="message_box"
      class="flex-1 overflow-y-auto p-4"
      phx-hook="AutoScroll"
      phx-update="stream"
    >
      <div :for={{message_id, message} <- @streams.messages} id={message_id}>
        <div class={"flex #{@current_user.id == message.user.id && "justify-end"}"}>
          <div class="w-[45%] my-[15px]">
            <p class="font-medium p-[5px]">{message.user.username}</p>
            <p class="break-words font-light p-[10px] bg-[#F2F7FB] ml-[20px] rounded-tr-xl rounded-br-xl rounded-bl-xl">
              {message.content}
            </p>
            <p class="text-gray-400 text-xs float-right">
              {Timex.format!(message.inserted_at, "%b %d, %Y, %H:%M:%S", :strftime)}
            </p>
          </div>
        </div>
      </div>
    </div>
    <div class="mt-[30px]">
      <.form for={@message_form} phx-submit="save" phx-change="msg_is_being_typed">
        <div class="relative">
          <.input field={@message_form[:content]} />
          <button type="submit" class="absolute top-[5px] right-[14px]">
            <FunctionComponents.icon
              icon_name="send_icon"
              svg_path={~p"/images/l_chat_sprite.svg#"}
              icon_size="w-[32px] h-[32px]"
            />
          </button>
        </div>
      </.form>
    </div>
  </section>
</div>
